@model Public360.ViewModels.CityDetail

@{
    ViewBag.Title = "Details";
}
<script src="/Scripts/jquery-1.7.1.min.js" type="text/javascript"></script> 
<script type="text/javascript">
    //classes
    function city(id, name, population) {
        this.id = id;
        this.name = name;
        this.population = population;

        this.selected = selected;
        function selected(sel) {
            this.selected = sel;
        }

        this.displayOrder = displayOrder;
        function displayOrder(dispOrder) {
            this.displayOrder = dispOrder;
        }
    }

    function expander(uniqueID, sortOrder, active, displayText, dataLevel, parentUniqueID, isLeaf, source) {
        this.uniqueID = uniqueID;
        this.sortOrder = sortOrder;
        this.active = active;
        this.displayText = displayText;
        this.dataLevel = dataLevel;
        this.parentUniqueID = parentUniqueID;
        this.isLeaf = isLeaf;
        this.source = source;

        this.cityDataLeafs = cityDataLeafs;
        function cityDataLeafs(leafs) {
            this.cityDataLeafs = leafs;
        }
    }

    function leaf(uniqueID, sortOrder, active, displayText, parentUniqueID) {
        this.uniqueID = uniqueID;
        this.sortOrder = sortOrder;
        this.active = active;
        this.displayText = displayText;
        this.parentUniqueID = parentUniqueID;

        this.cityDatas = cityDatas;
        function cityDatas(datas) {
            this.cityDatas = datas;
        }
    }

    function cityData(uniqueID, cityID, data, percentData) {
        this.uniqueID = uniqueID;
        this.cityID = cityID; 
        this.data = data;
        this.percentData = percentData;
    }

</script>
<script type="text/javascript">
    //globals
    var cities = new Array();
    var expanders = new Array();

    //load base city information on page load
    var cityBase = new city(@Model.City.CityID, "@Model.City.CityUniqueName", @Model.CityPopulation);
    cityBase.selected(1);
    cityBase.displayOrder(1);
    
    //assign base city to city array
    cities[cities.length] = cityBase;

</script>
<script type="text/javascript">
    function updateCityHeader() {
        var cityData = $('#CityData');

        //for each selected city make a column in order
        var output8 = "";
        for (s = 1; s < 4; s++) {
            var cityTemp8 = null;
            for (i = 0; i < cities.length; i++) {
                cityTemp8 = cities[i];
                if (cityTemp8.selected == 1) {
                    if (cityTemp8.displayOrder == s) {
                        output8 = output8 + cityTemp8.name + "&nbsp;&nbsp;&nbsp;";
                        break;
                    }
                }
            }
        }
        var cityDataCol1 = $('#CityDataCol1');
        cityDataCol1.html(output8);
    }
</script>
<script type="text/javascript">
    function updateData(expanderID) {
        if (expanderID != null && expanderID != '') {

            //diagnostic
            alert("update model - have expander id: "+ expanderID);

            // locate expander
            var foundExp = false;
            var expanderTemp5 = null;
            for (i = 0; i < expanders.length; i++) {
                expanderTemp5 = expanders[i];
                if (expanderTemp5.uniqueID == expanderID) {
                    foundExp = true;
                    break;
                }
            }

            //diagnostic
            //alert("foundexp: " + foundExp);

            var cityDataLeafs = null;

            if (foundExp == true) {
                //diagnostic
                //alert("found expander in collection");
                if (expanderTemp5.cityDataLeafs == null) {
                    //no leafs loaded

                    //diagnostic
                    //alert("no leafs for expander");

                    //create empty collection
                    cityDataLeafs = new Array();

                    //assign collection to expander
                    expanderTemp5.cityDataLeafs = cityDataLeafs;

                }
                else {
                    cityDataLeafs = expanderTemp5.cityDataLeafs;
                }

                //loop through selected cities
                var cityTemp5 = null;
                for (i = 0; i < cities.length; i++) {
                    cityTemp5 = cities[i];
                    if (cityTemp5.selected == 1) {
                        //diagnostic
                        //alert("city id: " + cityTemp5.id);

                        //todo precheck - see if first leaf has the city data in it, if so skip loading of leafs for that city
                        if (cityDataLeafs.length > 0) {

                            //diagnostic
                            //alert("some leafs exist");

                            //get first leaf only
                            leafTemp5 = cityDataLeafs[0];

                            //search for city data
                            var foundLeafCityData = false;
                            if (leafTemp5.cityDatas != null) {
                                //have some data
                                for (i2 = 0; i2 < leafTemp5.cityDatas.length; i2++) {
                                    cityDataTemp5 = leafTemp5.cityDatas[i2];
                                    if (cityDataTemp5.cityID == cityTemp5.id) {
                                        foundLeafCityData = true;
                                        break;
                                    }
                                }
                            }
                        }
                        if (foundLeafCityData != true) {
                            //diagnostic
                            //alert("leaf data for city not found");

                            //load leafs from selected city
                            $.getJSON('@Url.Action("UICityDataJSON")', { uiCityDataTypeID: expanderID, cityID: cityTemp5.id }, function (uiCityDatas) {
                                $.each(uiCityDatas, function (index, uiCityData) {

                                    //diagnostic
                                    //alert("city data read" + cityTemp5.id);

                                    //does leaf already exist
                                    var leafFound = false;
                                    var leafTemp5 = null;
                                    for (i = 0; i < cityDataLeafs.length; i++) {
                                        leafTemp5 = cityDataLeafs[i];
                                        if (leafTemp5.displayText == uiCityData.text) {
                                            leafFound = true;
                                            break;
                                        }
                                    }

                                    if (leafFound == true) {
                                        //alert("confirm data in2: " + leafTemp5.cityDatas[0].cityID);
                                    }

                                    if (leafFound != true) {
                                        //leaf not found

                                        //diagnostic
                                        //alert("leaf not found to match data coming in");

                                        //add leaf
                                        //todo fill in more properties here
                                        leafTemp5 = new leaf(0, 0, 1, uiCityData.text, expanderID);
                                        leafTemp5.cityDatas = null;

                                        //diagnostic
                                        //alert("adding leaf to collection: " + leafTemp5.displayText);

                                        //add to leaf collection
                                        cityDataLeafs[cityDataLeafs.length] = leafTemp5;
                                    }
                                    //leafTemp5 is leaf we're working on

                                    if (leafFound == true) {
                                        //alert("confirm data in3: " + leafTemp5.cityDatas[0].cityID);
                                    }

                                    //any city data for leaf exist
                                    if (leafTemp5.cityDatas == null) {
                                        //no city datas loaded

                                        //diagnostic
                                        //alert("no city data for leaf exist");

                                        //create empty collection
                                        var cityDatasTemp5 = new Array();

                                        //assign to leaf
                                        leafTemp5.cityDatas = cityDatasTemp5;
                                    }
                                    else {
                                        //alert("have city datas");
                                        cityDatasTemp5 = leafTemp5.cityDatas;
                                    }

                                    if (leafTemp5.cityDatas.length > 0) {
                                        //alert("confirm data in4: " + leafTemp5.cityDatas[0].cityID);
                                        //alert("confirm data in5: " + cityDatasTemp5[0].cityID);
                                    }

                                    //see if city data already exists for this city
                                    var cityDataFound = false;
                                    var cityDataTemp5 = null;
                                    for (i = 0; i < cityDatasTemp5.length; i++) {
                                        cityDataTemp5 = cityDatasTemp5[i];
                                        if (cityDataTemp5.cityID == cityTemp5.id) {
                                            cityDataFound = true;
                                            break;
                                        }
                                    }
                                    if (cityDataFound != true) {

                                        //diagnostic
                                        //alert("city data not found for leaf");

                                        //add city data to leaf 
                                        cityDataTemp5 = new cityData(0, cityTemp5.id, uiCityData.value, 0);

                                        //diagnostic
                                        //alert("add city data to leaf: " + cityDataTemp5.data);

                                        cityDatasTemp5[cityDatasTemp5.length] = cityDataTemp5;
                                    }

                                    //if nothing in collection, null it out
                                    if (leafTemp5.cityDatas.length == 0) {

                                        //diagnostic
                                        //alert("nulling out citydatas collection");
                                        leafTemp5.cityDatas = null;
                                    }
                                });
                            });
                        } //foundLeafCityData != true
                    } //cityTemp5.selected == 1
                } //cities loop

            //leaf notes
            //expand leaf class - see if leafs exist, if do use them, if not exist load for cities selected, in 
            //city index sort 1,2,3 index 5,2,15 (city indexes remain unchanged during page usage)
            //if leaf exists, see if citydata exist, if so skip
            //if leaf exists, citydata doesn't exist, load from db
            //loop through leafs, compare by index to db leafs and match titles, if match, load citydata for leaf
            //mark incoming leaf data matched
            //if no match, leave city data empty
            //loop through incoming leaf data search for no match, if found, add to end of child leafs, add data

            }
            else
            {
                alert("Expander not found");
            }
        }
    }
</script>
<script type="text/javascript">
    function updateLeafsDisplay(expanderID) {
        if (expanderID != null && expanderID != '') {
            // locate expander
            var foundExp7 = false;
            var expanderTemp7 = null;
            for (i = 0; i < expanders.length; i++) {
                expanderTemp7 = expanders[i];
                if (expanderTemp7.uniqueID == expanderID) {
                    foundExp = true;
                    break;
                }
            }

            if (foundExp == true) {
                alert("updatedisplay - foundexpander for display");
                var expID = '#UISubTypeExpander' + expanderID;
                var cityExpander = $(expID);
                cityExpander.html('');

                //locate leaves and append
                if (expanderTemp7.cityDataLeafs == null) {
                    alert("no leafs");
                }

                for (i2 = 0; i2 < expanderTemp7.cityDataLeafs.length; i2++) {
                    var leafTemp7 = expanderTemp7.cityDataLeafs[i2];
                    var output = '<div id="UIDetail' + expanderID.toString() + '" class="UIDetail' + expanderID.toString() + '">' + leafTemp7.displayText + '&nbsp;&nbsp;&nbsp;&nbsp;';
                    //locate city data and append
                    for (i3 = 0; i3 < leafTemp7.cityDatas.length; i3++) {
                        var cityData7 = leafTemp7.cityDatas[i3];
                        var value = cityData7.data;
                        output = output + value + '&nbsp;&nbsp;&nbsp;'
                    }
                    output = output + '<br />' + '</div>'
                    cityExpander.append(output);
                }
            }
            else {
                alert("expander not found");
            }
        }
    }
</script>

<script type="text/javascript">
    $(function () {
        $('.UISubTypeButton').live('click',function () {
            var uiSubTypeButton = $(this);
            var id = uiSubTypeButton.attr("id");
            var num = id.toString().substring(15);
            var cityID = @Model.City.CityID;
            if (num != null && num != '') {

                //alert("before update");
                updateData(num);
                //alert("after update");

                //revised html display
                if ($(this).html() == 'Expand')
                {
                    var expID = '#UISubTypeExpander' + num;
                    var cityExpander = $(expID);
                    if (cityExpander.html() == '')
                    {
                        updateLeafsDisplay(num);
                    }
                    else
                    {
                        $('.UIDetail' + num.toString()).attr("style", "display:show");
                    }
                    $(this).html('Contract');
                }
                else
                {
                    $('.UIDetail' + num.toString()).attr("style", "display:none");
                    $(this).html('Expand');
                }
            }
        });
    });
</script>

<script type="text/javascript">
    $(function () {
        $('.UISourceCityButton').live('click', function () {
            //TODO: get working
            var uiSourceCityButton = $(this);
            var id = uiSourceCityButton.attr("id");
            var num = id.toString().substring(18);
            if (num != null && num != '') {

                //determine how many cities are already selected and max display order
                var cityCount = 0;
                var selectedCount = 0;
                var maxDisplayOrder = 0;
                for (i = 0; i < cities.length; i++) {
                    var cityTemp2 = cities[i];
                    cityCount++;
                    if (cityTemp2.selected == 1) {
                        selectedCount++;
                        if (maxDisplayOrder < cityTemp2.displayOrder) {
                            maxDisplayOrder = cityTemp2.displayOrder;
                        }
                    }
                }

                //diagonostic
                //alert("City Count: " + cityCount);
                //alert("Selected count: " + selectedCount);
                //alert("Max DisplayOrder: " + maxDisplayOrder);

                //max 2 extra cities allowed + base city, if already have max, show message only
                if (selectedCount >= 3) {
                    alert("Maximum comparison cities already selected, please remove a city to select another");
                }
                else {

                    //is city already in collection
                    var found = false;
                    var cityTemp3 = null;
                    for (i = 0; i < cities.length; i++) {
                        cityTemp3 = cities[i];
                        if (cityTemp3.id == num) {
                            found = true;
                            break;
                        }
                    }
                    if (found == true) {

                        ///diagnostic
                        //alert("City in collection");
                        //select it
                        cityTemp3.selected = 1;

                        //set display order
                        cityTemp3.displayOrder = maxDisplayOrder + 1;


                    }
                    else {

                        //diagnostic
                        //alert("City not in collection");

                        //create comparison city

                        //todo get the name and population easily from ?
                        var cityTemp4 = new city(num, "comparison city name", 0);

                        //select it
                        cityTemp4.selected = 1;

                        //set display order
                        cityTemp4.displayOrder = maxDisplayOrder + 1;

                        //add to cities collection
                        cities[cities.length] = cityTemp4;
                    }
                }

                //diagnostic
                //for (i = 0; i < cities.length; i++) {
                //    var cityTemp5 = cities[i];
                //    alert(cityTemp5.id + " " + cityTemp5.name + " " + cityTemp5.population + " " + cityTemp5.selected + " " + cityTemp5.displayOrder);
                //}

                //update center screen data
                //locate expanded item if any
                //locate button with contract on it, get expander id for it
                //use expander id in function call
                //update object model
                //update display

                $('.UISubTypeButton').each(function (index) {
                    var uiSubTypeButton = $(this);
                    if (uiSubTypeButton.html() == "Contract") {
                        var id = uiSubTypeButton.attr("id");
                        var num = id.toString().substring(15);
                        if (num != null && num != '') {
                            //alert("redo: " + num);
                            updateData(num);
                            updateCityHeader();
                            updateLeafsDisplay(num);
                        }
                    }
                });


                //other notes
                //remove from list, unselect and remove order, adjust other orders
                //loop display order 1,2,3, locate city for each order, if found use

                //leaf notes
                //expand leaf class - see if leafs exist, if do use them, if not exist load for cities selected, in 
                //city index sort 1,2,3 index 5,2,15 (city indexes remain unchanged during page usage)
                //if leaf exists, see if citydata exist, if so skip
                //if leaf exists, citydata doesn't exist, load from db
                //loop through leafs, compare by index to db leafs and match titles, if match, load citydata for leaf
                //mark incoming leaf data matched
                //if no match, leave city data empty
                //loop through incoming leaf data search for no match, if found, add to end of child leafs, add data
            }
        });
    });
</script>
<script type="text/javascript">
    $(function () {
        $('#UICityDataTypeList').change(function () {
            var selectedUICityDataType = $("#UICityDataTypeList").val();
            if (selectedUICityDataType != null && selectedUICityDataType != '') {

                //clear out array fresh on each city data type click
                expanders = new Array();

                //load expander collection
                $.getJSON('@Url.Action("UICityDataTypeFullJSON")', { uiCityDataTypeID: selectedUICityDataType }, function (uiCityDataTypes) {
                    $.each(uiCityDataTypes, function (index, uiCityDataType) {
                        var expander1 = new expander(uiCityDataType.uniqueID, uiCityDataType.sortOrder, uiCityDataType.active, uiCityDataType.displayText, uiCityDataType.dataLevel, uiCityDataType.parentUniqueID, uiCityDataType.isLeaf, uiCityDataType.source);
                        expander1.cityDataLeafs = null;
                        expanders[expanders.length] = expander1;
                    });
                });

                //diagnostic
                //for (i = 0; i < expanders.length; i++) {
                //    var expander2 = expanders[i];
                //    alert(expander2.uniqueID + " " + expander2.sortOrder + " " + expander2.active + " " + expander2.displayText + " " + expander2.dataLevel + " " + expander2.parentUniqueID + " " + expander2.isLeaf + " " + expander2.source);
                //}

                //alert("expanders count: " + expanders.length);
                //alert(expander1.cityDataLeafs);

                //diagnostic
                //alert("stop here");

                var cityData = $('#CityData');

                cityData.html('<div id="CityDataCol1"></div>');
                cityData.append('<div id="CityDataUnder"></div>');

                updateCityHeader();

                var cityDataUnder = $('#CityDataUnder');
                alert("test");
                //for each expander make a row
                for (i = 0; i < expanders.length; i++) {
                    var expander2 = expanders[i];
                    cityDataUnder.append('<div id="UISubType' + expander2.uniqueID + '">' + expander2.displayText + '&nbsp;&nbsp;&nbsp;&nbsp;' + '<button id="UISubTypeButton' + expander2.uniqueID + '" class="UISubTypeButton">Expand</button>' + '<br />' + '</div>' + '<div id="UISubTypeExpander' + expander2.uniqueID + '">' + '</div>');
                }
            }
        });
    });
</script>
<script type="text/javascript">
    $(function () {
        $('#ComparisonCityList').change(function () {
            var selectedCity = $("#ComparisonCityList").val();
            if (selectedCity != null && selectedCity != '') {
                $.getJSON('@Url.Action("SingleCityPopJSON")', { cityID: selectedCity }, function (cities) {
                    var citiesSelect = $('#SourceCitiesList');
                    $.each(cities, function (index, city) {
                        var sourceCityID = '#UISourceCity' + city.value.toString();
                        var existCity = $(sourceCityID);
                        if (existCity.html() == null) {
                            citiesSelect.append('<div id="UISourceCity' + city.value + '">' + '<button id="UISourceCityButton' + city.value + '" class="UISourceCityButton">Add</button>' + city.text + '&nbsp;&nbsp;&nbsp;&nbsp;<br />' + '</div>');
                        }
                    });
                });
            }
        });
    });
</script>

<script type="text/javascript">
    $(function () {
        $('#Submit').click(function () {
            var percent = $("#PopComparisonPercent").val();
            var cityID = @Model.City.CityID;
            var stateID = @Model.City.StateID;
            var homePop = @Model.CityPopulation;

            if (percent != null && percent != '') {
                $.getJSON('@Url.Action("CitiesWithinPercentJSON")', { excludeCityID: cityID, stateID: stateID, homePop: homePop, percent: percent }, function (cities) {
                    var citiesSelect = $('#SourceCitiesList');
                    //citiesSelect.html('');
                    $.each(cities, function (index, city) {
                        var sourceCityID = '#UISourceCity' + city.value.toString();
                        var existCity = $(sourceCityID);
                        if (existCity.html() == null) {
                            citiesSelect.append('<div id="UISourceCity' + city.value + '">' + '<button id="UISourceCityButton' + city.value + '" class="UISourceCityButton">Add</button>' + city.text + '&nbsp;&nbsp;&nbsp;&nbsp;<br />' + '</div>');
                        }
                    });
                });
            }
        });
    });
</script>

<h2>City: @Model.City.CityUniqueName</h2><br />
<div class="user-selection" style="background-color:#FFD700;height:500px;width:400px;float:left;">
 Select Type of Data<br />
        <select id="UICityDataTypeList" size=@Model.UICityDataTypeSize>
            @foreach (var uiCityDataType in Model.UICityDataTypes)
            {
                <option value=@uiCityDataType.CityDataTypeID>@uiCityDataType.DisplayText</option>
            }
         </select> <br />
    <h3>Add Comparisons</h3><br />
        <select id="ComparisonCityList">
            <option value="">Select City...</option>

            @foreach (var city in Model.ComparisonCities)
            {
                <option value=@city.CityID>@city.CityUniqueName</option>
            }
         </select> <br />
         Population&nbsp;&nbsp;@Model.CityPopulation &nbsp; &nbsp: Within +/- (%) <input id="PopComparisonPercent" type="text" value="3" /> <br />

        <button id="Submit">Submit</button>
        <div id="SourceCitiesList" >
        </div>
</div>
<div id="CityData" style="float:left;">
</div>
